<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="34688276">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Code generated by Image Acquisition 01</c>
<l>list_files ('E:/CCMSDK_1224/MyProject/DualAA/AA_NewChart/ImgSave', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima)$','ignore_case'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l>    read_image (Image, ImageFiles[Index])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Do something</c>
<l>    dev_close_window()</l>
<l>    get_image_size(Image, Width, Height)</l>
<l>    rgb1_to_gray(Image, GrayImage)</l>
<l>    zoom_image_size(GrayImage, ImageZoom, 1600, 1200, 'bilinear')</l>
<l>    get_image_size(ImageZoom, Width, Height)</l>
<l>    dev_open_window(0, 0, Width/2, Height/2, 'black', WindowHandle)</l>
<l>    dev_display(ImageZoom)</l>
<c>    </c>
<l>    mean_image(ImageZoom, ImageMean, Width/2, Height/2)</l>
<l>    sub_image(ImageZoom, ImageMean, ImageSub, 1, 128)</l>
<l>    emphasize(ImageSub, ImageEmphasize, Width, Height, 1)</l>
<c>    </c>
<l>    threshold(ImageEmphasize, Region, 0, 80)</l>
<l>    fill_up(Region, RegionFillUp)</l>
<l>    connection(RegionFillUp, ConnectedRegions)</l>
<l>    area_center(ConnectedRegions, Area, Row, Column)</l>
<l>    tuple_max(Area, Max)</l>
<l>    tuple_min(Area, Min)</l>
<l>    select_shape(ConnectedRegions, SelectedRegions, 'area', 'and', (Min+Max)/2, Max+1)</l>
<l>    shape_trans(SelectedRegions, RegionTrans, 'inner_circle')</l>
<l>    area_center(RegionTrans, Area, RowRoll, ColumnRoll)</l>
<l>    dev_clear_window()</l>
<l>    dev_display(ImageZoom)</l>
<l>    dev_display(RegionTrans)</l>
<l>    *stop()</l>
<c>    </c>
<l>    RollWidth := 6</l>
<l>    erosion_circle(RegionTrans, RegionErosion, RollWidth)</l>
<l>    difference(RegionTrans, RegionErosion, RegionDifference)</l>
<l>    difference(Region, RegionDifference, RegionDifference)</l>
<l>    opening_circle(RegionDifference, RegionOpening, 3.5)</l>
<l>    gen_rectangle1(Rectangle, Height*2/10, Width*2/10, Height*8/10, Width*8/10)</l>
<l>    intersection(Rectangle, RegionOpening, RegionIntersection)</l>
<l>    closing_circle(RegionIntersection, RegionClosing, 13.5)</l>
<l>    connection(RegionClosing, ConnectedRegions)</l>
<l>    shape_trans(ConnectedRegions, RegionTransCircle, 'convex')</l>
<l>    shape_trans(RegionTransCircle, RegionTransCircle, 'outer_circle')</l>
<l>    select_shape (RegionTransCircle, SelectedRegionsCircle, 'outer_radius', 'and', 15, 39.494)</l>
<l>    area_center(SelectedRegionsCircle, Area, RowDot, ColumnDot)</l>
<l>    dev_clear_window()</l>
<l>    dev_set_draw('margin')</l>
<l>    dev_display(ImageZoom)</l>
<l>    dev_display(RegionTrans)</l>
<l>    dev_display(SelectedRegionsCircle)</l>
<l>    stop()</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
