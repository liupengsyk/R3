<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="1064883240">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Code generated by Image Acquisition 01</c>
<l>list_files ('E:/CCMSDK_1224/MyProject/DualAA/AA_NewChart/ImgSave', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima)$','ignore_case'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l>    read_image (Image, ImageFiles[Index])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Do something</c>
<l>    dev_close_window()</l>
<l>    get_image_size(Image, Width, Height)</l>
<l>    rgb1_to_gray(Image, GrayImage) </l>
<l>    dev_open_window(0, 0, Width/8, Height/8, 'black', WindowHandle)</l>
<l>    dev_display(GrayImage)</l>
<c>    </c>
<l>    mean_image(GrayImage, ImageMean, Width/2, Height/2)</l>
<l>    sub_image(GrayImage, ImageMean, ImageSub, 1, 128)</l>
<l>    emphasize(ImageSub, ImageEmphasize, Width, Height, 1)</l>
<c>   </c>
<l>     threshold(ImageEmphasize, Region, 0, 80)</l>
<l>     fill_up(Region, RegionFillUp)</l>
<l>     connection(RegionFillUp, ConnectedRegions)</l>
<l>    * gen_rectangle1(RegionFillUp, 10, 200, 300, 500)</l>
<l>     gen_rectangle1(Rectangle1, 10, 200, 300, 500)</l>
<l>     *area_center(RegionFillUp, Area1, Row1, Column1)</l>
<c>      </c>
<l>     *stop()</l>
<l>     reduce_domain(ConnectedRegions,Rectangle1, ImageReduced)</l>
<l>     union1(ImageReduced, RegionUnion)</l>
<l>     area_center(RegionUnion, Area2, Row4, Column4)</l>
<l>     gen_rectangle1(Rectangle2, Row4-100, Column4-100, Row4+100, Column4+100)</l>
<l>     reduce_domain(ImageEmphasize, Rectangle2, ImageReduced1)</l>
<c>     </c>
<l>    * stop()</l>
<l>     create_shape_model(ImageReduced1,'auto', -0.39, 0.79, 'auto', 'auto', 'use_polarity', 'auto', 'auto', ModelID)</l>
<l>     inspect_shape_model(ImageReduced1,ModelImages1,ModelRegions,4, 30)</l>
<l>     get_shape_model_contours(ModelContours2, ModelID, 1)</l>
<l>    * stop()</l>
<l>     gen_rectangle1(Rectangle3,Row4+600, Column4+500, Row4+750, Column4+650)</l>
<l>     reduce_domain(ConnectedRegions, Rectangle3, ImageReduced2)</l>
<l>     union1(ImageReduced2, RegionUnion1)</l>
<l>     area_center(RegionUnion1, Area3, Row6, Column6)</l>
<l>     gen_rectangle1(Rectangle4, Row6-50, Column6-50, Row6+50, Column6+50)</l>
<l>     reduce_domain(ImageEmphasize, Rectangle4, ImageReduced3)</l>
<l>     *write_image(ImageReduced3,'bmp',0,'E:/CCMSDK_1224/MyProject/DualAA/AA_NewChart/ImgSave/type1/shapMode')</l>
<l>     *write_image(ImageReduced3, 'tiff', 0, 'E:/CCMSDK_1224/MyProject/DualAA/AA_NewChart/ImgSave/type1/shapMode1')</l>
<l>      write_shape_model(ModelID,'E:/CCMSDK_1224/MyProject/DualAA/AA_NewChart/ImgSave/type1/shapMode') </l>
<l>      read_shape_model('E:/CCMSDK_1224/MyProject/DualAA/AA_NewChart/ImgSave/type1/shapMode',ModelID2)</l>
<c>      </c>
<c>      </c>
<l>     create_shape_model(ImageReduced3, 'auto', -0.39, 0.79, 'auto', 'auto', 'use_polarity', 'auto', 'auto', ModelID1)</l>
<l>     inspect_shape_model(ImageReduced3, ModelImages2, ModelRegions1, 4, 30)</l>
<l>     get_shape_model_contours(ModelContours1, ModelID1, 1)</l>
<c>     </c>
<l>      write_shape_model(ModelID1,'E:/CCMSDK_1224/MyProject/DualAA/AA_NewChart/ImgSave/type1/shapMode1')</l>
<l>      read_shape_model('E:/CCMSDK_1224/MyProject/DualAA/AA_NewChart/ImgSave/type1/shapMode1',ModelID3)</l>
<l>     *stop()</l>
<l>    *find_shape_model(ModelImages, ModelID, -0.39, 0.78, 0.5, 1, 0.5, 'least_squares', 0, 0.9, Row3, Column3, Angle1, Score1)</l>
<l>    * vector_angle_to_rigid(Row2, Column2, Angle, Row2, Column2, Angle, HomMat2D)</l>
<l>    * affine_trans_contour_xld(ModelContours, ContoursAffinTrans, HomMat2D)</l>
<l>     read_image(Image1,'E:/CCMSDK_1224/MyProject/DualAA/AA_NewChart/ImgSave/type1/20160725-111120Cam0.jpg')</l>
<l>     get_image_size(Image1, Width1, Height1)</l>
<l>     rgb1_to_gray(Image1, GrayImage1)</l>
<l>     mean_image(GrayImage1, ImageMean1, Width/2, Height/2)</l>
<l>     sub_image(GrayImage1, ImageMean1, ImageSub1, 1, 128)</l>
<l>     emphasize(ImageSub1, ImageEmphasize1, Width, Height, 1)</l>
<l>    * threshold(ImageEmphasize1, Region1, 0, 80)</l>
<l>    * fill_up(Region1, RegionFillUp1)</l>
<c>     </c>
<l>     find_shape_model(ImageEmphasize1,ModelID2, -0.39, 0.78, 0.5,0,0.5, 'least_squares', 0, 0.9, Row5, Column5, Angle2, Score)</l>
<c>     </c>
<l>    * stop()</l>
<l>     tuple_length(Row5, Length)</l>
<l>     for Index1 := 0 to Length-1 by 1  </l>
<l>         gen_cross_contour_xld(Cross, Row5[Index1], Column5[Index1], 200, 0)       </l>
<c>         </c>
<l>      *vector_angle_to_rigid(Row5[Index1], Column5[Index1], Angle2[Index1], Row5[Index1], Column5[Index1], Angle2[Index1], HomMat2D1)</l>
<l>      *affine_trans_contour_xld(ModelContours2, ContoursAffi1nTrans1, HomMat2D1)</l>
<c> </c>
<l>     endfor</l>
<c>     </c>
<l>     gen_rectangle1(Rectangle, Height*2/10, Width*2/10, Height*8/10, Width*8/10)</l>
<l>     reduce_domain(ImageEmphasize1, Rectangle, ImageReduced4)</l>
<l>     find_shape_model(ImageReduced4, ModelID3, -0.39, 0.79, 0.5, 0, 0.5, 'least_squares', 0, 1, Row7, Column7, Angle3, Score2)</l>
<l>     tuple_length(Row7,Length1)</l>
<l>     for Index2 := 1 to Length1-1 by 1</l>
<l>         gen_cross_contour_xld(Cross1, Row7[Index2], Column7[Index2], 50, 0)</l>
<l>         endfor</l>
<c>      </c>
<l>     stop()</l>
<c>     </c>
<c>      </c>
<l>    area_center(ConnectedRegions, Area, Row, Column)</l>
<l>    tuple_max(Area, Max)</l>
<l>    tuple_min(Area, Min)</l>
<l>    select_shape(ConnectedRegions, SelectedRegions, 'area', 'and', (Min+Max)/2, Max+1)</l>
<l>    shape_trans(SelectedRegions, RegionTrans, 'inner_circle')</l>
<l>    area_center(RegionTrans, Area, RowRoll, ColumnRoll)</l>
<c>    </c>
<c>       </c>
<c>    </c>
<l>    dev_clear_window()</l>
<l>    dev_display(GrayImage)</l>
<l>    dev_display(RegionTrans)</l>
<l>    stop()</l>
<c>    </c>
<l>    RollWidth := 6</l>
<l>    erosion_circle(RegionTrans, RegionErosion, RollWidth)</l>
<l>    difference(RegionTrans, RegionErosion, RegionDifference)</l>
<l>    difference(Region, RegionDifference, RegionDifference)</l>
<l>    opening_circle(RegionDifference, RegionOpening, 3.5)</l>
<l>    gen_rectangle1(Rectangle, Height*2/10, Width*2/10, Height*8/10, Width*8/10)</l>
<l>    intersection(Rectangle, RegionOpening, RegionIntersection)</l>
<l>    closing_circle(RegionIntersection, RegionClosing, 13.5)</l>
<l>    connection(RegionClosing, ConnectedRegions)</l>
<l>    shape_trans(ConnectedRegions, RegionTransCircle, 'convex')</l>
<l>    shape_trans(RegionTransCircle, RegionTransCircle, 'outer_circle')</l>
<l>    select_shape (RegionTransCircle, SelectedRegionsCircle, 'outer_radius', 'and', 10, 39.494)</l>
<l>    area_center(SelectedRegionsCircle, Area, RowDot, ColumnDot)</l>
<l>    dev_clear_window()</l>
<l>    dev_set_draw('margin')</l>
<l>    dev_display(GrayImage)</l>
<l>    dev_display(RegionTrans)</l>
<l>    dev_display(SelectedRegionsCircle)</l>
<l>    stop()</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
